CREATE TABLE SETTINGS(id INTEGER PRIMARY KEY AUTOINCREMENT); CREATE TABLE PROJECT(id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, description TEXT, uuid TEXT, curr INTEGER, archived INTEGER, all_done INTEGER, create_time TEXT, last_update_time TEXT, expire_time TEXT, UNIQUE(title)); CREATE TABLE CATEGORY(id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, description TEXT); CREATE TABLE LOG(id INTEGER PRIMARY KEY AUTOINCREMENT, log_type TEXT, description TEXT); CREATE TABLE M_TODO(id INTEGER PRIMARY KEY AUTOINCREMENT, done INTEGER, archived INTEGER, level INTEGER, todo TEXT, description TEXT, create_time TEXT, last_update_time TEXT, project_id INTEGER NULL, category_id INTEGER NULL, FOREIGN KEY(project_id) REFERENCES PROJECT(id), FOREIGN KEY(category_id) REFERENCES CATEGORY(id)); CREATE TRIGGER on_delete_category_trigger AFTER DELETE ON CATEGORY BEGIN DELETE FROM M_TODO WHERE category_id = OLD.id; INSERT INTO LOG (log_type, description) VALUES ("category_delete", "Todo deleted where title is= " || OLD.title); END; CREATE TRIGGER on_delete_project_trigger AFTER DELETE ON PROJECT BEGIN DELETE FROM M_TODO WHERE project_id = OLD.id; INSERT INTO LOG(log_type, description) VALUES ("project_delete", "Project deleted where id is= " || OLD.title); END; CREATE TRIGGER on_delete_todo_trigger AFTER DELETE ON M_TODO BEGIN INSERT INTO LOG("todo_delete") VALUES ("Todo deleted where id is= " || OLD.id); END; CREATE TRIGGER on_insert_todo_trigger AFTER INSERT ON M_TODO BEGIN INSERT INTO LOG("todo_insert") VALUES ("Todo inserted, new todo id is= " || NEW.id); END; INSERT INTO PROJECT(title, description,uuid,curr,archived,all_done) VALUES ('master', "Base branch you can't delete it", "0u0u0", 1, 0, 1);
